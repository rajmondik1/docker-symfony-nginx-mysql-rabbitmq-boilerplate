security:
    encoders:
        App\Entity\User:
            algorithm: auto

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            custom_authenticators:
                - App\Security\LoginFormAuthenticator
                - App\Security\ApiKeyAuthenticator

            lazy: true
            provider: app_user_provider
            # allow authentication using a form or HTTP basic
            form_login:
                username_parameter: email
                login_path: app_login
                check_path: app_login
                default_target_path: app_index

            http_basic: ~

#            login_throttling: ~
#                max_attempts: 30000000

            # configure the form authentication as the entry point for unauthenticated users
            entry_point: form_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            logout:
                path: app_logout


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        # allow unauthenticated users to access the login form
        - { path: ^/login|/register, roles: PUBLIC_ACCESS }

        # but require authentication for all other admin routes
        - { path: ^/*, roles: ROLE_USER }